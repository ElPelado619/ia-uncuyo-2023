# Cargar la biblioteca dplyr
library(dplyr)
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("arbolado-mza-dataset.csv")
library(readr)
arbolado_mza_dataset <- read_csv("RStudio/arbolado-mza-dataset.csv/arbolado-mza-dataset.csv")
View(arbolado_mza_dataset)
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("/Home/RStudio/arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("Home/RStudio/arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:\Users\usuario\Documents\RStudio\arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:\Users\usuario\Documents\RStudio\arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("Users\usuario\Documents\RStudio\arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:\Users\usuario\Documents\RStudio\arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:/Users/usuario/Documents/RStudio/arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:/Users/usuario/Documents/RStudio/arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
data <- read.csv("C:/Users/usuario/Documents/RStudio/arbolado-mza-dataset.csv")
# Leer el archivo arbolado-mza-dataset.csv
# Utilizar file.choose() para seleccionar el archivo
file_path <- file.choose()
data <- read.csv(file_path)
# Establecer una semilla para la reproducibilidad
set.seed(123)
# Dividir el conjunto de datos en entrenamiento (80%) y validación (20%)
train_data <- data %>% sample_frac(0.8)
validation_data <- data %>% anti_join(train_data)
# Escribir los conjuntos de datos divididos en archivos separados
write.csv(train_data, "arbolado-mendoza-dataset-train.csv", row.names = FALSE)
write.csv(validation_data, "arbolado-mendoza-dataset-validation.csv", row.names = FALSE)
setwd("~/RStudio/arbolado-mza-dataset.csv")
# Distribución de las clases de inclinacion_peligrosa
class_distribution <- table(train_data$inclinacion_peligrosa)
print(class_distribution)
setwd("~/ia-uncuyo-2023/tp7-ml")
# Distribución de las clases de inclinacion_peligrosa
class_distribution <- table(train_data$inclinacion_peligrosa)
print(class_distribution)
gc()
# Sección más peligrosa
head(train_data)
section_danger <- train_data %>%
group_by(seccion) %>%
summarize(danger_rate = mean(inclinacion_peligrosa == "si")) %>%
arrange(desc(danger_rate))
head(section_danger)
head(section_danger)
section_danger <- train_data %>%
group_by(seccion) %>%
summarize(danger_rate = mean(inclinacion_peligrosa == "1")) %>%
arrange(desc(danger_rate))
head(section_danger)
species_danger <- train_data %>%
group_by(especie) %>%
summarize(danger_rate = mean(inclinacion_peligrosa == "si")) %>%
arrange(desc(danger_rate))
head(species_danger)
species_danger <- train_data %>%
group_by(especie) %>%
summarize(danger_rate = mean(inclinacion_peligrosa == "1")) %>%
arrange(desc(danger_rate))
head(species_danger)
# Leer el archivo de entrenamiento
train_data <- read.csv("data/arbolado-mendoza-dataset-train.csv")
# Crear un histograma con diferentes números de bins
par(mfrow=c(2, 2)) # Divide la ventana gráfica en 2 filas y 2 columnas para mostrar múltiples histogramas
# Histograma con 10 bins
hist(train_data$circ_tronco_cm, breaks = 10, main = "Histograma (10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 20 bins
hist(train_data$circ_tronco_cm, breaks = 20, main = "Histograma (20 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 30 bins
hist(train_data$circ_tronco_cm, breaks = 30, main = "Histograma (30 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 50 bins
hist(train_data$circ_tronco_cm, breaks = 50, main = "Histograma (50 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear un histograma con diferentes números de bins
par(mar = c(5, 4, 4, 2))  # Ajustar los márgenes
par(mfrow = c(2, 2))  # Dividir la ventana gráfica # Divide la ventana gráfica en 2 filas y 2 columnas para mostrar múltiples histogramas
# Histograma con 10 bins
hist(train_data$circ_tronco_cm, breaks = 10, main = "Histograma (10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear un histograma con diferentes números de bins
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
par(mfrow = c(2, 2))  # Dividir la ventana gráfica  # Dividir la ventana gráfica # Divide la ventana gráfica en 2 filas y 2 columnas para mostrar múltiples histogramas
# Histograma con 10 bins
hist(train_data$circ_tronco_cm, breaks = 10, main = "Histograma (10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 20 bins
hist(train_data$circ_tronco_cm, breaks = 20, main = "Histograma (20 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear un histograma con diferentes números de bins
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
# Histograma con 20 bins
hist(train_data$circ_tronco_cm, breaks = 20, main = "Histograma (20 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 30 bins
hist(train_data$circ_tronco_cm, breaks = 30, main = "Histograma (30 bins)", xlab = "Circunferencia del Tronco (cm)")
# Histograma con 50 bins
hist(train_data$circ_tronco_cm, breaks = 50, main = "Histograma (50 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_si$circ_tronco_cm, breaks = 10, main = "Histograma (si, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_si$circ_tronco_cm, breaks = 10, main = "Histograma (si, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Dividir en dos grupos: "si" y "no" de inclinación_peligrosa
data_si <- train_data[train_data$inclinacion_peligrosa == "1", ]
data_no <- train_data[train_data$inclinacion_peligrosa == "0", ]
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_si$circ_tronco_cm, breaks = 10, main = "Histograma (si, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_si$circ_tronco_cm, breaks = 20, main = "Histograma (si, 20 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_si$circ_tronco_cm, breaks = 30, main = "Histograma (si, 30 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_si$circ_tronco_cm, breaks = 50, main = "Histograma (si, 50 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_si$circ_tronco_cm, breaks = 50, main = "Histograma (si, 50 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_si$circ_tronco_cm, breaks = 50, main = "Histograma (si, 50 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_no$circ_tronco_cm, breaks = 10, main = "Histograma (no, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_no$circ_tronco_cm, breaks = 10, main = "Histograma (no, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_no$circ_tronco_cm, breaks = 20, main = "Histograma (no, 20 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_no$circ_tronco_cm, breaks = 10, main = "Histograma (no, 10 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_no$circ_tronco_cm, breaks = 20, main = "Histograma (no, 20 bins)", xlab = "Circunferencia del Tronco (cm)")
hist(data_no$circ_tronco_cm, breaks = 30, main = "Histograma (no, 30 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_no$circ_tronco_cm, breaks = 30, main = "Histograma (no, 30 bins)", xlab = "Circunferencia del Tronco (cm)")
# Crear histogramas separados por la clase "si"
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(data_no$circ_tronco_cm, breaks = 50, main = "Histograma (no, 50 bins)", xlab = "Circunferencia del Tronco (cm)")
# Sección más peligrosa
head(train_data)
# Crear el histograma
dev.new(width = 10, height = 10)  # Crear una ventana gráfica más grande
hist(train_data$circ_tronco_cm, breaks = 10, main = "Histograma (10 bins)", xlab = "Circunferencia del Tronco (cm)")
# Seleccionar manualmente los puntos de corte
puntos_de_corte <- c(100, 200, 300)  # Define los puntos de corte según tu elección
# Asignar categorías
train_data$circ_tronco_cm_cat <- cut(train_data$circ_tronco_cm,
breaks = c(-Inf, puntos_de_corte, Inf),
labels = c("bajo", "medio", "alto", "muy alto"))
# Guardar el nuevo dataframe con la variable categórica
write.csv(train_data, "arbolado-mendoza-dataset-circ_tronco_cm-train.csv", row.names = FALSE)
